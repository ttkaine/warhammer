@model Warhammer.Core.Entities.Trophy

@{
    ViewBag.Title = "EditTrophy";
}

<h2>EditTrophy</h2>

@using (Html.BeginForm("EditTrophy", "Admin",
                               FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Trophy</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.PointsValue, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PointsValue, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PointsValue, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Image")
            <div class="col-md-10">
                <input type="file" id="imageFile" name="imageFile" multiple accept="image/*" style="display:none" onchange="handleFiles(this.files)">
                <a href="#" id="fileSelect"><p>Select New Image</p></a>
            </div>
        </div>
        <div id="preview">
            <h3>Choose your square crop</h3>
        </div>
        <input type="hidden" id="x1" name="x1" />
        <input type="hidden" id="h" name="h" />
        <input type="hidden" id="y1" name="y1" />
        <input type="hidden" id="w" name="w" />
        <input type="submit" value="Save" name="saveAction" class="btn btn-success" />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}


@section Scripts
{
    <script src="@Url.Content("~/scripts/jquery.Jcrop.min.js")"></script>
    <script>
        var jcrop_api;
        var fileSelect = document.getElementById("fileSelect"),
            fileElem = document.getElementById("imageFile");
        fileSelect.addEventListener("click", function (e) {
            if (fileElem) {
                fileElem.click();
            }
            e.preventDefault(); // prevent navigation to "#"
        }, false);

        function handleFiles(files) {


            for (var i = 0; i < files.length; i++) {
                var file = files[i];
                var imageType = /^image\//;
                if (!imageType.test(file.type)) {

                    continue;
                }

                var img = document.createElement("img");
                img.classList.add("obj");
                img.file = file;
                img.id = "PreviewImage";

                $('#preview').append(img); // Assuming that "preview" is the div output where the content will be displayed.
                var reader = new FileReader();
                reader.onload = (function (aImg) {
                    return function (e) {
                        aImg.src = e.target.result;
                        $(aImg).Jcrop({
                            boxWidth: 500,
                            boxHeight: 400,
                            aspectRatio: 1,
                            onChange: showCoords,
                            onSelect: showCoords
                        },

                        function () {

                            jcrop_api = this;
                            jcrop_api.animateTo([50, 0, 400, 400]);
                        });
                    };
                })
        (img);
                reader.readAsDataURL(file);
            }
        }

        function showCoords(c) {
            $('#x1').val(c.x);
            $('#y1').val(c.y);
            $('#h').val(c.h);
            $('#w').val(c.w);
        };
    </script>
}